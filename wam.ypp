%{
#include "wam.hpp"
%}
%defines %union { Cell *o; char c; List *l; }
%token <o> REF TERM
%token <c> LP RP COMMA DOT AND	/* () , . & */
%type <o> ex
%type <l> list
%%
REPL : | REPL ex { cout << $2->dump() << endl; } ;
ex : REF
	| TERM LP list RP	{ $$=$1;
	for (auto it=$3->nest.begin(),e=$3->nest.end();it!=e;it++) $$->push(*it); }
	| TERM 				{ $$=$1; }
	| AND ex			{ $$=new Str($2); }
;
list :				{ $$=new List(); }
	| list ex		{ $$=$1; $$->push($2); }
	| list COMMA ex	{ $$=$1; $$->push($3); }
;
%%